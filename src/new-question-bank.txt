1. Larry's Arrays
Larry has been given a permutation of a sequence of natural numbers incrementing from  as an array. He must determine whether the array can be sorted using the following operation any number of times:
Choose any  consecutive indices and rotate their elements in such a way that ABC->BCA->CAB->ABC.
for Example, if A = [1,6,5,2,4,3] :
[1,6,5,2,4,3]	[6,5,2]
[1,5,2,6,4,3]	[5,2,6]
[1,2,6,5,4,3]	[5,4,3]
[1,2,6,3,5,4]	[6,3,5]
[1,2,3,5,6,4]	[5,6,4]
[1,2,3,4,5,6] 
On a new line for each test case, print YES if  can be fully sorted. Otherwise, print NO.

Example: 
1: 3 1 2 -> rotate(3,1,2) -> [1,2,3]
2: 1 3 4 2 -> rotate(3,4,2) -> [1,4,2,3]
3: 1 4 2 3 -> rotate(4,2,3) -> [1,2,3,4]

*********************************

2. Alice is playing an arcade game and wants to climb to the top of the leaderboard and wants to track her ranking. The game uses Dense Ranking, so its leaderboard works like this:

The player with the highest score is ranked number  on the leaderboard.
Players who have equal scores receive the same ranking number, and the next player(s) receive the immediately following ranking number.
For example, the four players on the leaderboard have high scores of 100, 90, 90, and 80. Those players will have ranks 1, 2, 2, and 3, respectively. If Alice's scores are 70, 80  and 105, her rankings after each game are 4, 3  and 1.

*********************************

3. Lily likes to play games with integers. She has created a new game where she determines the difference between a number and its reverse. For instance, given the number 12, its reverse is 21. Their difference is 9. The number 120 reversed is 21 , and their difference is 90.

She decides to apply her game to decision making. She will look at a numbered range of days and will only go to a movie on a beautiful day.

Given a range of numbered days,[i ... j]  and a number k, determine the number of days in the range that are beautiful. Beautiful numbers are defined as numbers where [i-reverse(i)] is evenly divisible by k. If a day's value is a beautiful number, it is a beautiful day. Print the number of beautiful days in the range.

Function Description:
beautifulDays has the following parameter(s):

i: the starting day number
j: the ending day number
k: the divisor

Example: 
Lily may go to the movies on days 20,21,22 and 23. We perform the following calculations to determine which days are beautiful:

Day 20 is beautiful because the following evaluates to a whole number: 20-02/6 = 18/6 = 3
Day 21 is not beautiful because the following doesn't evaluate to a whole number: 21-12/6 = 9/6 = 1.5
Day 22 is beautiful because the following evaluates to a whole number: 22-22/6 = 0/6 = 0
Day 23 is not beautiful because the following doesn't evaluate to a whole number: 23-32/6 = 9/6 = 1.5
Only two days, 20  and 22, in this interval are beautiful. Thus, we print 2 as our answer.

Input: 20 23 6
Ouput: 2

******************************************

4. 
Andy wants to play a game with his little brother, Bob. The game starts with an array of distinct integers and the rules are as follows:

Bob always plays first and the two players move in alternating turns.
In a single move, a player chooses the maximum element currently present in the array and removes it as well as all the other elements to its right. For example, if the starting array arr =[2,3,5,4,1], then it becomes arr=[2,3] after the first move because we remove the maximum element (i.e., 5) and all elements to its right (i.e., 4 and 1).
The modifications made to the array during each turn are permanent, so the next player continues the game with the remaining array. The first player who is unable to make a move loses the game.
Andy and Bob play 'g' games. Given the initial array for each game, find and print the name of the winner on a new line. If Andy wins, print ANDY; if Bob wins, print BOB.

To continue the example above, in the next move Andy will remove 3. Bob will then remove 2 and win because there are no more integers to remove.

Function Description

Complete the gamingArray function. It should return a string that represents the winner, either ANDY or BOB.

gamingArray has the following parameter(s):
arr: an array of integers 

Test cases:
Test case1: 5 2 6 3 4
Test case2: 3 1

Test Result:
ANDY
BOB

For Example:
Initial array:
[5 2 6 3 4]
In the first move, Bob removes 6 and all the elements to its right, resulting in Arr= [5,2]
In the second move, Andy removes 5 and all the elements to its right, resulting in Arr = []:
At this point, the array is empty and Bob cannot make any more moves. This means Andy wins, so we print ANDY on a new line. 

***************************************

5.
You are working at the cash counter at a fun-fair, and you have different types of coins available to you in infinite quantities. The value of each coin is already given. Can you determine the number of ways of making change for a particular number of units using the given types of coins?

For example, if you have 4 types of coins, and the value of each type is given as 8, 3, 1, 2 respectively, you can make change for 3 units in three ways: [1,1,1], [1,2] , and [3].

Function Description:
Complete the getWays function given below. It must return an integer denoting the number of ways to make change.

getWays has the following parameter(s):
n: an integer, the amount to make change for
c: an array of integers representing available denominations

Sample Inputs
4 3
1 2 3

output: 4

sample input2
10 4
2 5 3 6

output: 5

*************************************

6.
You can perform the following operations on the string, 'a' :
1. Capitalize zero or more of a's lowercase letters.
2. Delete all of the remaining lowercase letters in 'a' .
Given two strings, 'a' and , 'b' determine if it's possible to make 'a' equal to 'b' as described. If so, print YES on a new line. Otherwise, print NO.

For example, given a= AbcDE and b=ABDE, in 'a' we can convert 'b' and delete 'c' to match''b' . If  a=AbcDE and b = AFDE , matching is not possible because letters may only be capitalized or discarded, not changed.

Function Description
Complete the function abbreviation. It must return either  or .

abbreviation has the following parameter(s):
a: the string to modify
b: the string to match

Input Format
DaBcd
ABC

Output: Yes

***************************************

7. Cut the tree
Anna loves graph theory! She has a tree where each vertex is numbered from  1 to n, and each contains a data value.
The sum of a tree is the sum of all its nodes' data values. If she cuts an edge in her tree, she forms two smaller trees. The difference between two trees is the absolute value between their sums.
Given a tree, determine which edge to cut so that the resulting trees have a minimal difference between them, then return that difference.
For example, your tree's nodes have weights of [1,2,3,4,5,6] . In this case, node numbers match their weights for convenience. In the diagram below, you have the following edges: [(1,2),(1,3),(2,6),(3,4),(3,5)].

(1)-'1'-(2)--'3'--(6)
  -'2'-(3)--'4'--(4)
     --'5'-(5)

The values are calculated as follows:

Edge    Tree 1  Tree 2  Absolute
Cut     Sum      Sum     Difference
1        8         13         5
2        9         12         3
3        6         15         9
4        4         17        13
5        5         16        11
The minimum absolute difference is 3 .

Note: The tree is always rooted at vertex 1 .

Function Description

Complete the cutTheTree function. Return an integer that represents the minimal absolute difference achievable between the resultant two trees.

cutTheTree has the following parameter(s):
1. data: an array of integers that represent node values
2 edges: an 2 dimensional array of integer pairs where each pair represents an edge in the graph

Input
100 200 100 500 100 600
1 2
2 3
2 5
4 5
5 6

Output
400

*****************************************

8.
Nikita just came up with a new array game. The rules are as follows:
Initially, Nikita has an array of integers.
In each move, Nikita must partition the array into 2 non-empty contiguous parts such that the sum of the elements in the left partition is equal to the sum of the elements in the right partition. If Nikita can make such a move, she gets 1 point; otherwise, the game ends.

After each successful move, Nikita discards either the left partition or the right partition and continues playing by using the remaining partition as array arr .

Nikita loves this game and wants your help getting the best score possible. Given arr , can you find and print the maximum number of points she can score?

For example, Nikita starts with the array arr = [1,2,3,6]. She first splits it into a1=[1,2,3] and [6], then discards a2. arr= a1->a1 = [1,2], a2 =[3]. Discard a2 leaving arr=[1,2]. This cannot be further split, so Nikita scored 2.

Function Description

Complete the arraySplitting function. It should return an integer that reperesents the number of times Nikita can split the array.
arraySplitting has the following parameter(s):
1. arr: an array of integers

Sample Input:

3 3 3
2 2 2 2
4 1 0 1 1 0 1

Output:
0
2
3

*****************************

9.
You and your friend decide to play a game using a stack consisting of N bricks. In this game, you can alternatively remove 1, 2 or 3 bricks from the top, and the numbers etched on the removed bricks are added to your score. You have to play so that you obtain the maximum possible score. It is given that your friend will also play optimally and you make the first move.

As an example, bricks are numbered arr=[1,2,3,4,5]. You can remove either[1] = 1, [1,2] = 3 or [1,2,3] = 6. For your friend, your moves would leave the options of 1 to 3  elements from [2,3,4] = 9 leaving 5 for you (total score = 6 ),  [3,4,5] = 12 or [4,5] = 9 . In this case, it will never be optimal for your friend to take fewer than the maximum available number of elements. Your maximum possible score is 6, achievable two ways: 1 first move and 5 the second, or [1,2,3] in your first move.

Function Description

Complete the bricksGame function. It should return an integer that represents your maximum possible score.
bricksGame has the following parameter(s):
1. arr: an array of integers
Input Format

The first line will contain an integer , the number of test cases.

Each of the next  pairs of lines are in the following format: 
- the number of bricks in . 
- The next line contains  space-separated integers $arr[i].

Input : 
5
999 1 1 1 0
5
0 1 1 1 999

Output: 
1001
999